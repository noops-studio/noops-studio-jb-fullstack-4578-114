
# index.html
<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>02SocialNetworkClient</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
</head>
<body>
  <app-root></app-root>
</body>
</html>

# app/app.routes.ts
import { Routes } from '@angular/router';
import { ProfileComponent } from './components/posts/profile/profile.component';
import { FeedComponent } from './components/posts/feed/feed.component';
import { NotFoundComponent } from './components/layout/not-found/not-found.component';

export const routes: Routes = [
    { path: 'profile', component: ProfileComponent },
    { path: '', redirectTo: 'profile', pathMatch: 'full'},
    { path: 'feed', component: FeedComponent },
    { path: '**', component: NotFoundComponent }
];

# app/pipes/allcaps.pipe.ts
import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'allcaps'
})
export class AllcapsPipe implements PipeTransform {

  transform(value: unknown, ...args: unknown[]): unknown {
    return (value as string).toUpperCase();
  }

}

# app/components/posts/demo/profile.component.css

# app/components/posts/demo/profile.component.html
<!-- one way binding -->
<p>{{name}}</p>
<p>current time: {{currentTime | date | allcaps}}</p>

<!-- two way binding -->
<input [(ngModel)]="address"/> 
{{address}}

<hr/>

<input [(ngModel)]="strUsername"/> 
<br/>
{{strUsername}}
<br/>
{{strEmail}}

<hr/> 

<input [(ngModel)]="username"/> 
<br/>
{{username()}}
<br/>
{{email()}}

<hr/> 
<!-- event binding -->
<button (click)="sayHi()">click me</button>

<!-- property binding -->
<button [disabled]="isButtonDisabled">click me</button> 


# app/components/posts/demo/profile.component.ts
import { DatePipe } from '@angular/common';
import { Component, computed, OnDestroy, OnInit, signal } from '@angular/core';
import { AllcapsPipe } from '../../../pipes/allcaps.pipe';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  imports: [DatePipe, AllcapsPipe, FormsModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent implements OnInit, OnDestroy {
    
    name: string = 'Bob'
    currentTime = (new Date())
    intervalId: any
    address: string = 'Khoma imigidal 33'

    strUsername = ''
    strEmail = `${this.strUsername}@johnbryce.co.il`

    username = signal<string>('')
    email = computed(() => `${this.username()}@johnbryce.co.il`)

    isButtonDisabled = true

    sayHi() {
        alert('hi')
    }

    // runs when the component initializes
    ngOnInit(): void {
        this.intervalId = setInterval(() => {
            this.currentTime = (new Date())
        }, 1000)
    }

    // runs when the component is destroyed
    ngOnDestroy(): void {
        clearInterval(this.intervalId)
    }



}

# app/components/posts/profile/profile.component.css

# app/components/posts/profile/profile.component.html
<!-- one way binding -->
<p>{{name}}</p>
<p>current time: {{currentTime | date | allcaps}}</p>

<!-- two way binding -->
<input [(ngModel)]="address"/> 
{{address}}

<hr/>

<input [(ngModel)]="strUsername"/> 
<br/>
{{strUsername}}
<br/>
{{strEmail}}

<hr/> 

<input [(ngModel)]="username"/> 
<br/>
{{username()}}
<br/>
{{email()}}

<hr/> 
<!-- event binding -->
<button (click)="sayHi()">click me</button>

<!-- property binding -->
<button [disabled]="isButtonDisabled">click me</button> 


# app/components/posts/profile/profile.component.ts
import { DatePipe } from '@angular/common';
import { Component, computed, OnDestroy, OnInit, signal } from '@angular/core';
import { AllcapsPipe } from '../../../pipes/allcaps.pipe';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-profile',
  imports: [DatePipe, AllcapsPipe, FormsModule],
  templateUrl: './profile.component.html',
  styleUrl: './profile.component.css'
})
export class ProfileComponent implements OnInit, OnDestroy {
    
    name: string = 'Bob'
    currentTime = (new Date())
    intervalId: any
    address: string = 'Khoma imigidal 33'

    strUsername = ''
    strEmail = `${this.strUsername}@johnbryce.co.il`

    username = signal<string>('')
    email = computed(() => `${this.username()}@johnbryce.co.il`)

    isButtonDisabled = true

    sayHi() {
        alert('hi')
    }

    // runs when the component initializes
    ngOnInit(): void {
        this.intervalId = setInterval(() => {
            this.currentTime = (new Date())
        }, 1000)
    }

    // runs when the component is destroyed
    ngOnDestroy(): void {
        clearInterval(this.intervalId)
    }



}

# app/components/posts/feed/feed.component.css

# app/components/posts/feed/feed.component.html
<p>feed works!</p>

# app/components/posts/feed/feed.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-feed',
  imports: [],
  templateUrl: './feed.component.html',
  styleUrl: './feed.component.css'
})
export class FeedComponent {

}

# app/components/app/app.component.html
<app-layout></app-layout>

# app/components/app/app.component.ts
import { Component } from '@angular/core';
import { LayoutComponent } from "../layout/layout/layout.component";

@Component({
  selector: 'app-root',
  imports: [LayoutComponent],
  templateUrl: './app.component.html',
  styleUrl: './app.component.css'
})
export class AppComponent {
  title = '02-social-network-client';
}

# app/components/app/app.component.css

# app/components/layout/footer/footer.component.css
p { 
    color: green;
}
# app/components/layout/footer/footer.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-footer',
  imports: [],
  templateUrl: './footer.component.html',
  styleUrl: './footer.component.css'
})
export class FooterComponent {

}

# app/components/layout/footer/footer.component.html
<p>footer works!</p>

# app/components/layout/not-found/not-found.component.css
p {
    color: red;
    font-weight: 900;
    font-size: 24px;
}
# app/components/layout/not-found/not-found.component.html
<p>Your page was not found</p>

# app/components/layout/not-found/not-found.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-not-found',
  imports: [],
  templateUrl: './not-found.component.html',
  styleUrl: './not-found.component.css'
})
export class NotFoundComponent {

}

# app/components/layout/layout/layout.component.css
#grid {
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-template-rows: 1fr 3fr 3fr 1fr;
    height: 100%;
}

#grid > * {
    border: 1px dashed lightcoral;
}

#grid > header {
    grid-row: 1;
    grid-column: 1 / span 2;
}

#grid > aside:nth-child(0) {
    grid-row: 2;
    grid-column: 1;
}

#grid > aside:nth-child(1) {
    grid-row: 3;
    grid-column: 1;
}

#grid > main {
    grid-row: 2 / span 2;
    grid-column: 2;
    overflow: auto;
}

#grid > footer {
    grid-row: 4;
    grid-column: 1 / span 2;
}


# app/components/layout/layout/layout.component.html
<div id="grid" class="grid grid-cols-[1fr_3fr] grid-rows-[1fr_3fr_3fr_1fr] h-full">
    <header class="row-start-1 col-span-2 border border-dashed border-[color:lightcoral]">
      <app-header></app-header>
    </header>
    <aside class="row-start-2 col-start-1 border border-dashed border-[color:lightcoral]">
      <app-following></app-following>
    </aside>
    <aside class="row-start-3 col-start-1 border border-dashed border-[color:lightcoral]">
      <app-followers></app-followers>
    </aside>
    <main class="row-start-2 row-span-2 col-start-2 overflow-auto border border-dashed border-[color:lightcoral]">
      <router-outlet></router-outlet>
    </main>
    <footer class="row-start-4 col-span-2 border border-dashed border-[color:lightcoral]">
      <app-footer></app-footer>
    </footer>
  </div>
  
# app/components/layout/layout/layout.component.ts
import { Component } from '@angular/core';
import { HeaderComponent } from "../header/header.component";
import { FooterComponent } from "../footer/footer.component";
import { FollowingComponent } from "../../follows/following/following.component";
import { FollowersComponent } from "../../follows/followers/followers.component";
import { RouterOutlet } from '@angular/router';
import { ProfileComponent } from "../../posts/profile/profile.component";

@Component({
  selector: 'app-layout',
  imports: [
    HeaderComponent,
    FooterComponent,
    FollowingComponent,
    FollowersComponent,
    RouterOutlet,
    ProfileComponent
],
  templateUrl: './layout.component.html',
  styleUrl: './layout.component.css'
})
export class LayoutComponent {

}

# app/components/layout/header/header.component.html
<div id="header">
    <div>
        <h1>logo</h1>
    </div>  
    <div>

        <a routerLink="/profile" routerLinkActive="active">profile</a>
        <a routerLink="/feed" routerLinkActive="active">feed</a>
    </div>
    <div>
        Hello Bob
    </div>
</div>
# app/components/layout/header/header.component.css
p {
    color: red;
}

.active {
    color: green;
}

#header {
    display: flex;
    flex-direction: row;
    gap: 20px;
    justify-content: space-between;
}

#header div:nth-child(2) {
    display: flex;
    flex-direction: row;
    gap: 6px;
    
}
# app/components/layout/header/header.component.ts
import { Component } from '@angular/core';
import { RouterLink, RouterLinkActive } from '@angular/router';

@Component({
  selector: 'app-header',
  imports: [RouterLink, RouterLinkActive],
  templateUrl: './header.component.html',
  styleUrl: './header.component.css'
})
export class HeaderComponent {

}

# app/components/follows/followers/followers.component.html
<p>followers works!</p>

# app/components/follows/followers/followers.component.css

# app/components/follows/followers/followers.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-followers',
  imports: [],
  templateUrl: './followers.component.html',
  styleUrl: './followers.component.css'
})
export class FollowersComponent {

}

# app/components/follows/following/following.component.css

# app/components/follows/following/following.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-following',
  imports: [],
  templateUrl: './following.component.html',
  styleUrl: './following.component.css'
})
export class FollowingComponent {

}

# app/components/follows/following/following.component.html
<p>following works!</p>

# app/app.config.ts
import { ApplicationConfig, provideZoneChangeDetection } from '@angular/core';
import { provideRouter } from '@angular/router';

import { routes } from './app.routes';

export const appConfig: ApplicationConfig = {
  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]
};

# main.ts
import { bootstrapApplication } from '@angular/platform-browser';
import { appConfig } from './app/app.config';
import { AppComponent } from './app/components/app/app.component';

bootstrapApplication(AppComponent, appConfig)
  .catch((err) => console.error(err));

# styles.css
/* You can add global styles to this file, and also import other style files */
html, body {
    margin: 0;
    padding: 0;
    height: 100%;
}
@import "tailwindcss";
